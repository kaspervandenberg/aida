<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:858efe24-26c0-4090-be46-c9a5b4f21cad" author="Marco Roos (workflow), Edgard Meij (service)" title="AIDA_Retrieve_documents_in_parts">This workflow applies the search web service from the AIDA toolbox.

Comments:
This search service is based on lucene defaults; it may be necessary to optimize the querystring to adopt the behaviour to what is most relevant in a particular domain (e.g. for medline prioritizing based on publication date is useful). Lucene favours shorter sentences, which may be bad for subsequent information extraction.</s:workflowdescription>
  <s:processor name="PubMedURL_stub" boring="true">
    <s:stringconstant>http&amp;#58;//www.ncbi.nlm.nih.gov/sites/entrez?cmd=Retrieve&amp;amp;db=PubMed&amp;amp;list_uids=</s:stringconstant>
  </s:processor>
  <s:processor name="title_xpath" boring="true">
    <s:stringconstant>/aid:result/doc/field[@name='title']/value</s:stringconstant>
  </s:processor>
  <s:processor name="Concatenate1">
    <s:local>org.embl.ebi.escience.scuflworkers.java.StringConcat</s:local>
  </s:processor>
  <s:processor name="search">
    <s:arbitrarywsdl>
      <s:wsdl>http://aida.science.uva.nl:9999/axis/services/SearcherWS?wsdl</s:wsdl>
      <s:operation>search</s:operation>
    </s:arbitrarywsdl>
  </s:processor>
  <s:processor name="XPath_Title">
    <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
  </s:processor>
  <s:processor name="Concatenate2">
    <s:local>org.embl.ebi.escience.scuflworkers.java.StringConcat</s:local>
  </s:processor>
  <s:processor name="XPath_Abstract">
    <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
  </s:processor>
  <s:processor name="XPath_PMID">
    <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
  </s:processor>
  <s:processor name="pubmedID_xpath" boring="true">
    <s:stringconstant>/aid:result/doc/field[@name='PMID']/value</s:stringconstant>
  </s:processor>
  <s:processor name="abstract_xpath" boring="true">
    <s:stringconstant>/aid:result/doc/field[@name='content']/value</s:stringconstant>
  </s:processor>
  <s:link source="document_index" sink="search:index" />
  <s:link source="maxHits" sink="search:maxHits" />
  <s:link source="queryString" sink="search:queryString" />
  <s:link source="search_field" sink="search:defaultField" />
  <s:link source="XPath_PMID:nodelist" sink="Concatenate1:string2" />
  <s:link source="XPath_Title:nodelist" sink="Concatenate2:string1" />
  <s:link source="abstract_xpath:value" sink="XPath_Abstract:xpath" />
  <s:link source="pubmedID_xpath:value" sink="XPath_PMID:xpath" />
  <s:link source="search:searchReturn" sink="XPath_Abstract:xml-text" />
  <s:link source="search:searchReturn" sink="XPath_PMID:xml-text" />
  <s:link source="search:searchReturn" sink="XPath_Title:xml-text" />
  <s:link source="title_xpath:value" sink="XPath_Title:xpath" />
  <s:link source="Concatenate1:output" sink="pubmed_URL" />
  <s:link source="Concatenate2:output" sink="title_abstract" />
  <s:link source="PubMedURL_stub:value" sink="Concatenate1:string1" />
  <s:link source="XPath_Abstract:nodelist" sink="Concatenate2:string2" />
  <s:link source="XPath_Abstract:nodelist" sink="abstract" />
  <s:link source="XPath_PMID:nodelist" sink="pubmed_id" />
  <s:link source="XPath_Title:nodelist" sink="title" />
  <s:source name="queryString">
    <s:metadata>
      <s:description>Lucene query for search. Simple AND and OR queries will work. For advanced queries see http://lucene.apache.org for more information.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="document_index">
    <s:metadata>
      <s:description>e.g. MedLine will give access to a weekly update index of the medline corpus.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="search_field">
    <s:metadata>
      <s:description>e.g.' content' will search abstract and title; abstract just the abstract, title just the title.</s:description>
    </s:metadata>
  </s:source>
  <s:source name="maxHits">
    <s:metadata>
      <s:description>limits the maximum number of hits search will produce. In Taverna 1 '100' works well while a 1000 and above is likely to halt Taverna 1 due to memory problems. This also depends on the memory setting for the java virtual machine by the client (usually your local Taverna).</s:description>
    </s:metadata>
  </s:source>
  <s:sink name="pubmed_id" />
  <s:sink name="pubmed_URL" />
  <s:sink name="abstract" />
  <s:sink name="title" />
  <s:sink name="title_abstract" />
</s:scufl>

