<?xml version="1.0" encoding="UTF-8"?>
<s:scufl xmlns:s="http://org.embl.ebi.escience/xscufl/0.1alpha" version="0.2" log="0">
  <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:b4c1a118-6a38-40b5-99e9-febbd3c85f2b" author="Marco Roos (AID)" title="Discover_proteins">This workflow applies the discovery workflow built around the AIDA 'Named Entity Recognize' web service by Sophia Katrenko. It uses the pre-learned genomics model, named 'MedLine', to find genomics concepts in a set of documents in lucene output format.</s:workflowdescription>
  <s:processor name="prelearned_genomics_model" boring="true">
    <s:stringconstant>MedLine</s:stringconstant>
  </s:processor>
  <s:processor name="Extract_ProteinsPerDocID">
    <s:description>This workflow filters protein_molecule-labeled terms from an input string(list). The result is a tagged list of proteins (disregarding false positives in the input).

Internal information:
This workflow is a copy of 'filter_protein_molecule_MR3' used for the NBIC poster (now in Archive).</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:df6063f9-b469-4d56-aecc-a62db4bcb3ad" author="Marco Roos (AID)" title="Extract_proteins_per_xmldoc">This workflow filters protein_molecule-labeled terms from an input string(list). The result is a tagged list of proteins (disregarding false positives in the input).

Internal information:
This workflow is a copy of 'filter_protein_molecule_MR3' used for the NBIC poster (now in Archive).</s:workflowdescription>
        <s:processor name="Remove_duplicate_strings">
          <s:local>org.embl.ebi.escience.scuflworkers.java.StringStripDuplicates</s:local>
        </s:processor>
        <s:processor name="FilterTrueProteinByUniProtID">
          <s:beanshell>
            <s:scriptvalue>if (uniprot!="False") {
	true_protein=protein;
	true_uniprot=uniprot;
}</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="'text/plain'">protein</s:beanshellinput>
              <s:beanshellinput s:syntactictype="'text/plain'">uniprot</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">true_protein</s:beanshelloutput>
              <s:beanshelloutput s:syntactictype="'text/plain'">true_uniprot</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
          <s:iterationstrategy>
            <i:dot xmlns:i="http://org.embl.ebi.escience/xscufliteration/0.1beta10">
              <i:iterator name="uniprot" />
              <i:iterator name="protein" />
            </i:dot>
          </s:iterationstrategy>
        </s:processor>
        <s:processor name="UniProtOrNot">
          <s:beanshell>
            <s:scriptvalue>Iterator i;

if (uniprotIDlist.isEmpty()) {
	uniprotID_or_False = "False";
} else {
	uniprotID_or_False = (String) uniprotIDlist.iterator().next().toString();
}</s:scriptvalue>
            <s:beanshellinputlist>
              <s:beanshellinput s:syntactictype="l('text/plain')">uniprotIDlist</s:beanshellinput>
            </s:beanshellinputlist>
            <s:beanshelloutputlist>
              <s:beanshelloutput s:syntactictype="'text/plain'">uniprotID_or_False</s:beanshelloutput>
            </s:beanshelloutputlist>
            <s:dependencies s:classloader="iteration" />
          </s:beanshell>
        </s:processor>
        <s:processor name="Filter1">
          <s:defaults>
            <s:default name="regex">.+</s:default>
          </s:defaults>
          <s:local>org.embl.ebi.escience.scuflworkers.java.FilterStringList</s:local>
        </s:processor>
        <s:processor name="Filter2">
          <s:defaults>
            <s:default name="regex">.+</s:default>
          </s:defaults>
          <s:local>org.embl.ebi.escience.scuflworkers.java.FilterStringList</s:local>
        </s:processor>
        <s:processor name="DocID_xpath" boring="true">
          <s:stringconstant>//doc/@id</s:stringconstant>
        </s:processor>
        <s:processor name="XPath_DocID_From_Text">
          <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
        </s:processor>
        <s:processor name="getUniprotID">
          <s:arbitrarywsdl>
            <s:wsdl>http://bubbles.biosemantics.org:8180/axis/services/SynsetServer/SynsetServer.jws?wsdl</s:wsdl>
            <s:operation>getUniprotID</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:processor name="protein_molecule_xpath" boring="true">
          <s:stringconstant>//protein_molecule</s:stringconstant>
        </s:processor>
        <s:processor name="XPath_protein_From_Text">
          <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
        </s:processor>
        <s:processor name="DocPart_xpath" boring="true">
          <s:stringconstant>//doc</s:stringconstant>
        </s:processor>
        <s:processor name="XPath_DocPart_From_Text">
          <s:local>net.sourceforge.taverna.scuflworkers.xml.XPathTextWorker</s:local>
        </s:processor>
        <s:link source="FilterTrueProteinByUniProtID:true_protein" sink="Filter2:stringlist" />
        <s:link source="FilterTrueProteinByUniProtID:true_uniprot" sink="Filter1:stringlist" />
        <s:link source="Remove_duplicate_strings:strippedlist" sink="getUniprotID:term" />
        <s:link source="UniProtOrNot:uniprotID_or_False" sink="FilterTrueProteinByUniProtID:uniprot" />
        <s:link source="XPath_protein_From_Text:nodelist" sink="Remove_duplicate_strings:stringlist" />
        <s:link source="getUniprotID:getUniprotIDReturn" sink="UniProtOrNot:uniprotIDlist" />
        <s:link source="input_string" sink="XPath_DocID_From_Text:xml-text" />
        <s:link source="DocID_xpath:value" sink="XPath_DocID_From_Text:xpath" />
        <s:link source="input_string" sink="XPath_DocPart_From_Text:xml-text" />
        <s:link source="DocPart_xpath:value" sink="XPath_DocPart_From_Text:xpath" />
        <s:link source="Remove_duplicate_strings:strippedlist" sink="FilterTrueProteinByUniProtID:protein" />
        <s:link source="XPath_DocPart_From_Text:nodelistAsXML" sink="XPath_protein_From_Text:xml-text" />
        <s:link source="protein_molecule_xpath:value" sink="XPath_protein_From_Text:xpath" />
        <s:link source="Filter1:filteredlist" sink="uniprotID" />
        <s:link source="Filter2:filteredlist" sink="protein_molecule" />
        <s:link source="XPath_DocID_From_Text:nodelist" sink="doc_id" />
        <s:source name="input_string">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>text/plain</s:mimeType>
            </s:mimeTypes>
            <s:description>Example:
&lt;result_final&gt;&lt;doc id="15208672"&gt;&lt;other_name&gt;Replicative&lt;/other_name&gt;&lt;other_name&gt;cell&lt;/other_name&gt;&lt;cell_type&gt;damaged&lt;/cell_type&gt;&lt;other_name&gt;tumor&lt;/other_name&gt;&lt;protein_molecule&gt;tumor&lt;/protein_molecule&gt;&lt;protein_molecule&gt;p53&lt;/protein_molecule&gt;&lt;other_name&gt;EZH2&lt;/other_name&gt;&lt;protein_molecule&gt;p53&lt;/protein_molecule&gt;&lt;other_name&gt;epigenetic&lt;/other_name&gt;&lt;other_name&gt;genetic&lt;/other_name&gt;&lt;other_name&gt;EZH2&lt;/other_name&gt;&lt;tissue&gt;tumors&lt;/tissue&gt;&lt;protein_molecule&gt;p53&lt;/protein_molecule&gt;&lt;other_name&gt;cancer&lt;/other_name&gt;&lt;/doc&gt;&lt;doc id="15520282"&gt;&lt;protein_molecule&gt;Ezh2&lt;/protein_molecule&gt;&lt;protein_molecule&gt;Polycomb&lt;/protein_molecule&gt;&lt;protein_complex&gt;PRC3&lt;/protein_complex&gt;&lt;other_organic_compound&gt;histone&lt;/other_organic_compound&gt;&lt;other_name&gt;HKMT&lt;/other_name&gt;&lt;protein_molecule&gt;Ezh2&lt;/protein_molecule&gt;&lt;protein_molecule&gt;HDAC1&lt;/protein_molecule&gt;&lt;protein_family_or_group&gt;YY1&lt;/protein_family_or_group&gt;&lt;other_organic_compound&gt;H3&lt;/other_organic_compound&gt;&lt;protein_molecule&gt;MyoD&lt;/protein_molecule&gt;&lt;protein_molecule&gt;SRF&lt;/protein_molecule&gt;&lt;DNA_family_or_group&gt;chromatin&lt;/DNA_family_or_group&gt;&lt;other_organic_compound&gt;H3&lt;/other_organic_compound&gt;&lt;protein_complex&gt;Ezh2&lt;/protein_complex&gt;&lt;protein_family_or_group&gt;positive&lt;/protein_family_or_group&gt;&lt;DNA_domain_or_region&gt;genomic&lt;/DNA_domain_or_region&gt;&lt;other_name&gt;muscle&lt;/other_name&gt;&lt;other_name&gt;cell&lt;/other_name&gt;&lt;/doc&gt;&lt;/result_final&gt;</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="protein_molecule" />
        <s:sink name="uniprotID" />
        <s:sink name="doc_id" />
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:processor name="Discover_entities">
    <s:description>This workflow contains the 'Named Entity Recognize' web service from the AIDA toolbox, created by Sophia Katrenko. It can be used to discover entities of a certain type (determined by 'learned_model') in documents provided in a lucene output format.</s:description>
    <s:workflow>
      <s:scufl version="0.2" log="0">
        <s:workflowdescription lsid="urn:lsid:net.sf.taverna:wfDefinition:e7ae8f2a-428f-4afd-93eb-52ccb89273e1" author="Marco Roos (AID)" title="Discover_entities">This workflow contains the 'Named Entity Recognize' web service from the AIDA toolbox, created by Sophia Katrenko. It can be used to discover entities of a certain type (determined by 'learned_model') in documents provided in a lucene output format.

Known issues:
The output of NErecognize contains concepts with / characters, breaking the xml. For post-processing its results it is better to use string manipulation than xml manipulations.
The output is per document, which means entities will  be redundant if they occur in more than one document.</s:workflowdescription>
        <s:processor name="Default_output_type" boring="true">
          <s:stringconstant>NElist</s:stringconstant>
        </s:processor>
        <s:processor name="Default_input_type" boring="true">
          <s:stringconstant>lucene</s:stringconstant>
        </s:processor>
        <s:processor name="NErecognize">
          <s:arbitrarywsdl>
            <s:wsdl>http://ws.adaptivedisclosure.org/axis/services/NERecognizerService?wsdl</s:wsdl>
            <s:operation>NErecognize</s:operation>
          </s:arbitrarywsdl>
        </s:processor>
        <s:link source="input_from_lucene" sink="NErecognize:input_data" />
        <s:link source="learned_model" sink="NErecognize:r_type" />
        <s:link source="Default_input_type:value" sink="NErecognize:input_type" />
        <s:link source="Default_output_type:value" sink="NErecognize:output_type" />
        <s:link source="NErecognize:NErecognizeReturn" sink="discovered_entities" />
        <s:source name="input_from_lucene" />
        <s:source name="learned_model">
          <s:metadata>
            <s:description>Model to discover a set of specific concepts; e.g. the prelearned model named 'MedLine' will make the service discover genomics concepts.</s:description>
          </s:metadata>
        </s:source>
        <s:sink name="discovered_entities">
          <s:metadata>
            <s:mimeTypes>
              <s:mimeType>text/rdf</s:mimeType>
              <s:mimeType>text/xml</s:mimeType>
            </s:mimeTypes>
            <s:description>Entities discoverd in documents provided in lucene output format.</s:description>
          </s:metadata>
        </s:sink>
      </s:scufl>
    </s:workflow>
  </s:processor>
  <s:link source="documents_from_lucene" sink="Discover_entities:input_from_lucene" />
  <s:link source="Discover_entities:discovered_entities" sink="Extract_ProteinsPerDocID:input_string" />
  <s:link source="Extract_ProteinsPerDocID:doc_id" sink="doc_ids" />
  <s:link source="Extract_ProteinsPerDocID:protein_molecule" sink="discovered_proteins" />
  <s:link source="Extract_ProteinsPerDocID:uniprotID" sink="discovered_uniprot_ids" />
  <s:link source="prelearned_genomics_model:value" sink="Discover_entities:learned_model" />
  <s:source name="documents_from_lucene" />
  <s:sink name="discovered_proteins">
    <s:metadata>
      <s:mimeTypes>
        <s:mimeType>text/rdf</s:mimeType>
        <s:mimeType>text/xml</s:mimeType>
      </s:mimeTypes>
    </s:metadata>
  </s:sink>
  <s:sink name="discovered_uniprot_ids" />
  <s:sink name="doc_ids" />
</s:scufl>

