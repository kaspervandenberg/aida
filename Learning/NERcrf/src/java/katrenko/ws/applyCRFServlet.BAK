/*
 * applyCRFServlet.java
 *
 * Created on понеділок, 4, лютого 2008, 18:44
 */

package katrenko.ws;

import java.io.*;
import java.net.*;

import org.apache.axis.client.Call;
import org.apache.axis.client.Service;
import java.lang.Object.*;

import javax.servlet.*;
import javax.servlet.http.*;

/**
 *
 * @author Admin
 * @version
 */
public class applyCRFServlet extends HttpServlet {
    
    /** Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.
     * @param request servlet request
     * @param response servlet response
     */
    public void init(ServletConfig config) throws ServletException {
  //  super.init(config);
    
    //String initial = config.getInitParameter("initial");
    
 /*   model[0] = config.getInitParameter("model");
     test[0] = config.getInitParameter("test");
     outputMode[0] = config.getInitParameter("outputMode");
    try {
        model[0] = "0";
        test[0] = "This is a test example of p18 protein in case nothing is provided.\n";
        outputMode[0] = "2";
        //count = Integer.parseInt(initial);
    }
    catch (Exception e) {
      System.out.println("wi-wi-wi");
    }
 */
  }
    
    
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        //response.setContentType("text/html;charset=UTF-8");
        //PrintWriter out = response.getWriter();
       
//        doGet(request,  response);
        String model;
        String test;
        String outputMode;
          
        model = request.getParameterValues("model");
        test = request.getParameterValues("test");
        outputMode = request.getParameterValues("outputMode");
        
/*
        String[] model = new String[1];
        model = request.getParameterValues("model_file");
        String[] test = new String[1];
        test = request.getParameterValues("test_file");
        String[] outputMode = new String[1];
        outputMode = request.getParameterValues("outputMode");
 */ 
        //String[] token = new String[1];
        //token = request.getParameterValues("token");
  
        System.out.println("TEST " + test[0]);
        System.out.println("MODEL " + model[0]);
        System.out.println("outputMode " + outputMode[0]);
        
        String ret = new String();ret = "<doc>Please check your test data once again!</doc>";
        try {
            String endpoint =
                      "http://localhost:8084/axis/services/CRFapply";
  
             Service  service = new Service();
             Call     call    = (Call) service.createCall();
  
             call.setTargetEndpointAddress(endpoint);
             call.setOperationName("apply");
  
             ret = (String) call.invoke( new Object[] { test[0], model[0], outputMode[0], "1"} );
             //System.out.println("RET" + ret);
         } catch (Exception e) {
             System.err.println(e.toString()); System.out.println("couldn't invoke a service well");
         } 
        request.setAttribute("output",ret);
        response.setContentType("text/html;charset=UTF-8");        
        PrintWriter out = response.getWriter();
       // out.println("<pre>" + ret + "</pre>");
     //   out.println(ServletUtilities.filter(ret));
        out.println("<TEXTAREA name=\"test_file\" cols=\"60\" rows=\"16\">" + ret + "</TEXTAREA><br/><br/>");           
        out.close();
    }
    
    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /** Handles the HTTP <code>GET</code> method.
     * @param request servlet request
     * @param response servlet response
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        //processRequest(request, response);
        response.setContentType("text/html;charset=UTF-8");        
        PrintWriter out = response.getWriter();
        
        synchronized(this)
{
        String outp = new String();outp = "We have identified a transcriptional repressor, Nrg1, in a genetic screen designed to reveal negative factors involved in the expression of STA1, which encodes a glucoamylase. The NRG1 gene encodes a 25-kDa C2H2 zinc finger protein which specifically binds to two regions in the upstream activation sequence of the STA1 gene, as judged by gel retardation and DNase I footprinting analyses. Disruption of the NRG1 gene causes a fivefold increase in the level of the STA1 transcript in the presence of glucose.";
        String contents = "";
        /*String line;
            try{
            BufferedReader inputData = new BufferedReader(new FileReader("/home/sophijka/WebServices/TestModelService/Data/totest.xml"));
            while ( (line = inputData.readLine()) != null)
             {
               outp = new StringBuffer (outp).append(line).toString();
             }
        }catch(Exception ie){System.out.println("Can't read demo file");}
  */
        out.println("<html>");
	out.println("<head>");
	out.println("<title>CRF Web Service</title>");
	out.println("</head>");
        out.println("<body bgcolor=\"#808080\" text=\"000000\">");
        out.println("<h2 align=\"center\" style = \"font-family:Verdana\"><span style=\"font-weight: bold; color:#C0C0C0\">Test Model Web Service</span></h2><br/><br/>");
        String model_file = new String();
        model_file = request.getParameter("model"); 
        String test_file = new String();
        test_file = request.getParameter("test");
        String outputMode = new String();
        outputMode = request.getParameter("outputMode");
        
        if ((model_file == null) || (test_file == null) || (outputMode == null)) { 
       //  if (test_file == null) { 
           out.println("<form action=\"" + "\" method=\"POST\">\n");
           out.println("<h4>Please enter the following information:</h4>");
           out.println("<h4>choose the trained model</h4>");
           out.println("<select id=\"model\" name=\"model\">");
           out.println("<option value=\"1\">BioCreative I</option>");
           out.println("<option value=\"0\">NLPBA model</option>");
           out.println("</select>");
           out.println("<h4>enter your test data below</h4>");
           out.println("<TEXTAREA name=\"test\" cols=\"60\" rows=\"16\">" + outp + "</TEXTAREA><br/><br/>");
           out.println("<h4>choose an output type</h4>");
           out.println("<select id=\"ouputMode\" name=\"outputMode\">");
           out.println("<option value=\"3\">a list of entities</option>");
           out.println("<option value=\"2\">SGML</option>");
           out.println("<option value=\"1\">IOB format</option>");
           out.println("<option value=\"4\">ABNER format</option>");
           out.println("</select>");
           out.println("<input type=\"submit\" + name=\"button\">\n");
           out.println("</form>");
        }
        out.println("</body>");
        out.println("</html>");
        //out.close();

    } 
    }
    
    /** Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        processRequest(request, response);
    }
    
    /** Returns a short description of the servlet.
     */
    public String getServletInfo() {
        return "Short description";
    }
    // </editor-fold>
}
