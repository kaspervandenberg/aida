//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.02.28 at 01:11:10 PM CET 
//


package config.aid.org.impl;

public class ConfigTypeImpl implements config.aid.org.ConfigType, com.sun.xml.bind.JAXBObject, config.aid.org.impl.runtime.UnmarshallableObject, config.aid.org.impl.runtime.XMLSerializable, config.aid.org.impl.runtime.ValidatableObject
{

    protected java.math.BigInteger _MergeFactor;
    protected java.math.BigInteger _MinMergeDocs;
    protected java.lang.String _MetaData;
    protected java.lang.String _IndexPath;
    protected boolean has_SRBused;
    protected boolean _SRBused;
    protected com.sun.xml.bind.util.ListImpl _DocType;
    protected java.lang.String _DataPath;
    protected java.lang.String _IndexAnalyzer;
    protected boolean has_IndexOverwrite;
    protected boolean _IndexOverwrite;
    protected java.lang.String _Creator;
    public final static java.lang.Class version = (config.aid.org.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (config.aid.org.ConfigType.class);
    }

    public java.math.BigInteger getMergeFactor() {
        return _MergeFactor;
    }

    public void setMergeFactor(java.math.BigInteger value) {
        _MergeFactor = value;
    }

    public java.math.BigInteger getMinMergeDocs() {
        return _MinMergeDocs;
    }

    public void setMinMergeDocs(java.math.BigInteger value) {
        _MinMergeDocs = value;
    }

    public java.lang.String getMetaData() {
        return _MetaData;
    }

    public void setMetaData(java.lang.String value) {
        _MetaData = value;
    }

    public java.lang.String getIndexPath() {
        return _IndexPath;
    }

    public void setIndexPath(java.lang.String value) {
        _IndexPath = value;
    }

    public boolean isSRBused() {
        return _SRBused;
    }

    public void setSRBused(boolean value) {
        _SRBused = value;
        has_SRBused = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getDocType() {
        if (_DocType == null) {
            _DocType = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _DocType;
    }

    public java.util.List getDocType() {
        return _getDocType();
    }

    public java.lang.String getDataPath() {
        return _DataPath;
    }

    public void setDataPath(java.lang.String value) {
        _DataPath = value;
    }

    public java.lang.String getIndexAnalyzer() {
        return _IndexAnalyzer;
    }

    public void setIndexAnalyzer(java.lang.String value) {
        _IndexAnalyzer = value;
    }

    public boolean isIndexOverwrite() {
        return _IndexOverwrite;
    }

    public void setIndexOverwrite(boolean value) {
        _IndexOverwrite = value;
        has_IndexOverwrite = true;
    }

    public java.lang.String getCreator() {
        return _Creator;
    }

    public void setCreator(java.lang.String value) {
        _Creator = value;
    }

    public config.aid.org.impl.runtime.UnmarshallingEventHandler createUnmarshaller(config.aid.org.impl.runtime.UnmarshallingContext context) {
        return new config.aid.org.impl.ConfigTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(config.aid.org.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_DocType == null)? 0 :_DocType.size());
        if (_IndexPath!= null) {
            context.startElement("http://aid.org/", "IndexPath");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IndexPath), "IndexPath");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_IndexOverwrite) {
            context.startElement("http://aid.org/", "IndexOverwrite");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IndexOverwrite)), "IndexOverwrite");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IndexAnalyzer!= null) {
            context.startElement("http://aid.org/", "IndexAnalyzer");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IndexAnalyzer), "IndexAnalyzer");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("http://aid.org/", "DataPath");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _DataPath), "DataPath");
        } catch (java.lang.Exception e) {
            config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_SRBused) {
            context.startElement("http://aid.org/", "SRBused");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SRBused)), "SRBused");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MergeFactor!= null) {
            context.startElement("http://aid.org/", "MergeFactor");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MergeFactor)), "MergeFactor");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MinMergeDocs!= null) {
            context.startElement("http://aid.org/", "MinMergeDocs");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _MinMergeDocs)), "MinMergeDocs");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx6 != len6) {
            context.startElement("http://aid.org/", "DocType");
            int idx_14 = idx6;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DocType.get(idx_14 ++)), "DocType");
            context.endNamespaceDecls();
            int idx_15 = idx6;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DocType.get(idx_15 ++)), "DocType");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DocType.get(idx6 ++)), "DocType");
            context.endElement();
        }
    }

    public void serializeAttributes(config.aid.org.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_DocType == null)? 0 :_DocType.size());
        if (_Creator!= null) {
            context.startAttribute("", "Creator");
            try {
                context.text(((java.lang.String) _Creator), "Creator");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MetaData!= null) {
            context.startAttribute("", "MetaData");
            try {
                context.text(((java.lang.String) _MetaData), "MetaData");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx6 != len6) {
            idx6 += 1;
        }
    }

    public void serializeURIs(config.aid.org.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_DocType == null)? 0 :_DocType.size());
        while (idx6 != len6) {
            idx6 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (config.aid.org.ConfigType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001e"
+"com.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclared"
+"AttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r"
+"\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.s"
+"un.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lj"
+"ava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv"
+"/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/200"
+"1/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expres"
+"sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001f"
+"xpq\u0000~\u0000#q\u0000~\u0000\"sq\u0000~\u0000\u000eppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0011xq\u0000~\u0000\u0003q\u0000~\u0000\u0015psq\u0000~\u0000\u0017ppsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0005QN"
+"amesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u00001q\u0000~\u0000\"sr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURI"
+"q\u0000~\u0000\u001fxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000"
+")http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gr"
+"ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0014\u0001ps"
+"q\u0000~\u00005t\u0000\tIndexPatht\u0000\u000fhttp://aid.org/q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0015p"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0007booleanq\u0000~\u00003q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000Fq\u0000~\u0000\"sq\u0000~\u0000"
+"\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\u000eIndexOverwriteq\u0000~\u0000?q\u0000"
+"~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017ppsr\u0000)com.sun.msv.data"
+"type.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/S"
+"et;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintF"
+"acet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet"
+"\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000"
+"\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001eq\u0000~\u0000?t\u0000\fanalyzerTypeq\u0000~\u0000&\u0000\u0000q\u0000~\u0000!q\u0000~\u0000!t\u0000\u000benumerationsr\u0000\u0011ja"
+"va.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\bSTANDARDt\u0000\u0004STOP"
+"t\u0000\u0006SIMPLEt\u0000\nWHITESPACExq\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000Wq\u0000~\u0000?sq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000"
+"~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\rIndexAnalyzerq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u0010pp\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001asq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\bDat"
+"aPathq\u0000~\u0000?sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Csq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000"
+"~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0007SRBusedq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q"
+"\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0017ppsr\u0000$com.sun.msv.datatype.xsd.IntegerTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType"
+"\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000Txq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0007integerq\u0000~\u00003sr\u0000,c"
+"om.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005sca"
+"lexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraint"
+"FacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Sppq\u0000~\u00003\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd."
+"NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0007decimalq\u0000~\u00003q\u0000~\u0000}t\u0000\u000efract"
+"ionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000xq\u0000~\u0000\"sq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q"
+"\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\u000bMergeFactorq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0015p\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000tsq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\fMin"
+"MergeDocsq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000eppsr\u0000 com.sun.msv.grammar.OneOrMore"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003"
+"expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0015psq\u0000~\u0000\u0010q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\u000eppsq"
+"\u0000~\u0000\u008dq\u0000~\u0000\u0015psq\u0000~\u0000,q\u0000~\u0000\u0015psr\u00002com.sun.msv.grammar.Expression$Any"
+"StringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000<psr\u0000 com.sun.msv.gramm"
+"ar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0016config.aid.org"
+".DocTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000e"
+"ppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\u0007DocTypeq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000"
+"\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000\u001asq\u0000~\u00005t\u0000\u0007Creatort\u0000\u0000q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000"
+"~\u0000\u0015pq\u0000~\u0000\u001asq\u0000~\u00005t\u0000\bMetaDataq\u0000~\u0000\u00a5q\u0000~\u0000;sr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006paren"
+"tt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000%\u0001pq\u0000~\u0000\u008fq\u0000~\u0000\u0091q\u0000"
+"~\u0000+q\u0000~\u0000Hq\u0000~\u0000`q\u0000~\u0000fq\u0000~\u0000mq\u0000~\u0000\u0081q\u0000~\u0000\u0088q\u0000~\u0000\u0093q\u0000~\u0000\u009dq\u0000~\u0000\u00a6q\u0000~\u0000Nq\u0000~\u0000qq\u0000"
+"~\u0000\u0085q\u0000~\u0000\rq\u0000~\u0000\bq\u0000~\u0000Bq\u0000~\u0000lq\u0000~\u0000\u0005q\u0000~\u0000sq\u0000~\u0000\u0087q\u0000~\u0000@q\u0000~\u0000jq\u0000~\u0000\tq\u0000~\u0000\nq\u0000"
+"~\u0000Lq\u0000~\u0000\fq\u0000~\u0000\u000bq\u0000~\u0000\u000fq\u0000~\u0000\u0006q\u0000~\u0000\u008cq\u0000~\u0000\u0016q\u0000~\u0000eq\u0000~\u0000\u00a1q\u0000~\u0000\u0007q\u0000~\u0000\u0094x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends config.aid.org.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(config.aid.org.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------");
        }

        protected Unmarshaller(config.aid.org.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return config.aid.org.impl.ConfigTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("IndexOverwrite" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  27 :
                        if (("DocType" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  12 :
                        if (("IndexAnalyzer" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("DataPath" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        break;
                    case  30 :
                        if (("DocType" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 28;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  18 :
                        if (("SRBused" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "MetaData");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "FileType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Field" == ___local)&&("http://aid.org/" == ___uri)) {
                            _getDocType().add(((config.aid.org.impl.DocTypeImpl) spawnChildFromEnterElement((config.aid.org.impl.DocTypeImpl.class), 29, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getDocType().add(((config.aid.org.impl.DocTypeImpl) spawnChildFromEnterElement((config.aid.org.impl.DocTypeImpl.class), 29, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Creator");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        if (("MergeFactor" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  24 :
                        if (("MinMergeDocs" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  6 :
                        if (("IndexPath" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MetaData = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Creator = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  29 :
                        if (("DocType" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  14 :
                        if (("IndexAnalyzer" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  30 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  23 :
                        if (("MergeFactor" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("IndexOverwrite" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "MetaData");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "FileType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getDocType().add(((config.aid.org.impl.DocTypeImpl) spawnChildFromLeaveElement((config.aid.org.impl.DocTypeImpl.class), 29, ___uri, ___local, ___qname)));
                        return ;
                    case  26 :
                        if (("MinMergeDocs" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Creator");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  20 :
                        if (("SRBused" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  17 :
                        if (("DataPath" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  8 :
                        if (("IndexPath" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 12;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  30 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  3 :
                        if (("MetaData" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        if (("FileType" == ___local)&&("" == ___uri)) {
                            _getDocType().add(((config.aid.org.impl.DocTypeImpl) spawnChildFromEnterAttribute((config.aid.org.impl.DocTypeImpl.class), 29, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getDocType().add(((config.aid.org.impl.DocTypeImpl) spawnChildFromEnterAttribute((config.aid.org.impl.DocTypeImpl.class), 29, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        if (("Creator" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        state = 12;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  30 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "MetaData");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText1(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  28 :
                        attIdx = context.getAttribute("", "FileType");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getDocType().add(((config.aid.org.impl.DocTypeImpl) spawnChildFromLeaveAttribute((config.aid.org.impl.DocTypeImpl.class), 29, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Creator");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText2(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  5 :
                        if (("MetaData" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  2 :
                        if (("Creator" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            state = 12;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  22 :
                            state = 23;
                            eatText3(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText2(value);
                            return ;
                        case  30 :
                            revertToParentFromText(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "MetaData");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText1(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText5(value);
                            return ;
                        case  28 :
                            attIdx = context.getAttribute("", "FileType");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getDocType().add(((config.aid.org.impl.DocTypeImpl) spawnChildFromText((config.aid.org.impl.DocTypeImpl.class), 29, value)));
                            return ;
                        case  19 :
                            state = 20;
                            eatText6(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText7(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Creator");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText2(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText8(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText9(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MergeFactor = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IndexPath = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MinMergeDocs = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SRBused = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SRBused = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IndexOverwrite = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IndexOverwrite = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IndexAnalyzer = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DataPath = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
