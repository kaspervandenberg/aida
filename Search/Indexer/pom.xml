<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.vle.aid</groupId>
  <artifactId>indexer</artifactId>
  <version>0.70</version>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<test.workingDirectory>${java.io.tmpdir}</test.workingDirectory>
	</properties>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
			
      <plugin>
				<!--
					Run tests
				-->
        <artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
        <configuration>
          <skip>false</skip>
					<!--
						Change the working directory, since the tests require some files in 
						their working directory and produce some clutter in that directory.
					-->
					<workingDirectory>${test.workingDirectory}</workingDirectory>
        </configuration>
      </plugin>
    </plugins>

		<testResources>
			<!-- 
				The tests expect their resources in their working directory.
				Therefore they are copied.
			-->
			<testResource>
				<directory>${project.build.testSourceDirectory}</directory>
				<targetPath>${test.workingDirectory}</targetPath>
			</testResource>
		</testResources>
  </build>

  <dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<!-- provides javax.servlet -->
			<!-- used in nl.uva.science.wsdtf.protocols.HTTPStreamer -->
		</dependency>
		
		<dependency>
			<groupId>javax.xml.parsers</groupId>
			<artifactId>jaxp-api</artifactId>
			<version>1.4.5</version>
			<!-- used in indexer.Indexer, and 
						config.org.aid.impl.runtime.MarshallerImpl -->
		</dependency>
		
		<dependency>
			<groupId>axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
			<!-- provides org.apache.axis. -->
			<!-- used in Iindexer.Indexer -->
		</dependency>

		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis-jaxrpc</artifactId>
			<version>1.4</version>
			<!-- provides javax.xml.rpc -->
			<!-- used in indexer.Indexer -->
		</dependency>
		
		<dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <version>2.1.0</version>
			<!-- used in indexer.* -->
    </dependency>
    
		<dependency>
      <groupId>pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
			<version>0.7.3</version>
			<!-- provides org.pdfbox -->
			<!-- newer versions available via org.apache.pdfbox -->
			<!-- perhaps replace it for Tika -->
			<!-- used in indexer.PdfHandler, and indexer.DocConverter -->
    </dependency>
    
		<dependency>
      <groupId>org.textmining</groupId>
      <artifactId>tm-extractors</artifactId>
      <version>0.4</version>
			<!-- used in indexer.MswordHandler -->
    </dependency>
    
		<dependency> 
      <groupId>org.dspace</groupId>
      <artifactId>jargon</artifactId>
      <version>1.4.25</version>
			<!-- provides edu.sdsc.grid.io.{srb,local} -->
			<!-- used in indexer.SRBhandler -->
    </dependency>
    
		<dependency>
			<groupId>org.jglobus</groupId>
			<artifactId>JGlobus-Core</artifactId>
			<version>2.0.4</version>
			<!-- provides org.globus -->
			<!-- used in nl.uva.science.wsdtf.StreamClient, 
					nl.uva.science.wsdtf.utilities.*, and 
					nl.uva.science.wsdtf.protocols.* -->
		</dependency>
  </dependencies>

	<profiles>
		<!--
			Installs Indexer webservices into the AXIS installation on
			vocab.maastro.nl
			activate with: $ mvn -P deploy_on_Vocab -Dvocab.tomcat.admin.user={…} -Dvocab.tomcat.admin.password={…} install
		-->
		<profile>
			<id>deploy_on_Vocab</id>
			<properties>
				
				<!--
					Location of AXIS servlet as installed within Tomcat
				-->
				<axis.home>${env.CATALINA_BASE}/webapps/axis</axis.home>

				<!--
					Classpath of AXIS; where its libraries and webservice jars should go.
				-->
				<axis.lib>${axis.home}/WEB-INF/lib</axis.lib>

				<!--
					Port on which the AXIS servlet listens
				-->
				<axis.admin.port>80</axis.admin.port>

				<!--
					Hostname where to reach the AXIS servlet; this will often be 
					'localhost' since the execution 'install into AXIS:jars' copies
					the jars and thus runs local compared to the vocab server.
				-->
				<axis.host>localhost</axis.host>

				<!--
					The context under which AXIS is installed in Tomcat.
				-->
				<axis.context>/axis</axis.context>

				<!--
					Forms, together with ${axis.host} and ${axis.admin.port}, the URL to 
					which AXIS::Adminclient should connect.  This is the default context
					of AXIS.
				-->
				<axis.admin.servlet>${axis.context}/services/AdminService</axis.admin.servlet>

				<!--
					Port on which the Tomcat manager servlet listens.  Per default this 
					is equal to AXIS' port
				-->
				<tomcat.manager.port>${axis.admin.port}</tomcat.manager.port>

				<!--
					Hostname where to reach the Tomcat manager servlet
				-->
				<tomcat.manager.host>${axis.host}</tomcat.manager.host>

				<!--
					Forms, together with ${tomcat.manager.host} and ${tomcat.manger.port}
					the URL where the Tomcat manager servlet can be reached.
				-->
				<tomcat.manager.servlet>/manager</tomcat.manager.servlet>
			</properties>

			<!--
				Extra goals to achieve when 'install'ing on the vocab server.
			-->
			<build>
				<plugins>
					<!--
						Copy this project's jar and the jars it depends on into AXIS' 
						classpath.
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>install into AXIS:jars</id>
								<phase>install</phase>
								<goals>
									<goal>copy</goal>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.name}</artifactId>
											<version>${project.version}</version>
											<type>jar</type>
											<overWrite>true</overWrite>
										</artifactItem>
									</artifactItems>
									<outputDirectory>${axis.lib}</outputDirectory>
								</configuration>
							</execution>	
						</executions>
					</plugin>

					<!--
						Invoke AXIS AdminClient to deploy the webservice.
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>install into AXIS:deploy</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<arguments>
										<argument>-classpath</argument><classpath/>
										<argument>org.apache.axis.client.AdminClient</argument>
										<argument>-p</argument><argument>${axis.admin.port}</argument>
										<argument>${project.build.scriptSourceDirectory}/deploy.wsdd</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!--
						Restart AXIS to update its classpath.
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>install into AXIS:reload</id>
								<phase>install</phase>
								<goals>
									<goal>reload</goal>
								</goals>
								<configuration>
									<path>${axis.context}</path>
									<url>http://${tomcat.manager.host}:${tomcat.manager.port}${tomcat.manager.servlet}/text</url>
									<!--
										Specify the username of vocab's tomcat script administrator
										when invoking maven (using "-Dvocab.tomcat.admin.user={…})
										or in settings.xml
										NOTE: script administrator is a different user than the
										user of the gui, see tomcat's tomcat-users.xml.
									-->
									<username>${vocab.tomcat.admin.user}</username>
									
									<!--
										Specify the password of vocab's tomcat script administrator
										when invoking maven (using "-Dvocab.tomcat.admin.password={…})
										or in settings.xml
										NOTE: script administrator is a different user than the
										user of the gui, see tomcat's tomcat-users.xml.
									-->
									<password>${vocab.tomcat.admin.password}</password>
									
									<!--
										We do not deploy a project packaged as war, instead we
										deploy something in the classpath of a servlet.
										Thus should the tomcat mojo not check the packaging.
									-->
									<ignorePackaging>true</ignorePackaging>
									
									<charset>${project.build.sourceEncoding}</charset>
								</configuration>	
							</execution>
						</executions>
					</plugin>	

					<!--
						Check that the required properties have been defined
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.2</version>
						<executions>
							<execution>
								<id>enfore-properties</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>env.CATALINA_BASE</property>
											<message>Source AIDA::System/setEnvironment to define CATALINA_BASE.</message>
										</requireProperty>

										<requireProperty>
											<property>vocab.tomcat.admin.user</property>
										</requireProperty>
										
										<requireProperty>
											<property>vocab.tomcat.admin.password</property>
										</requireProperty>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>

<!-- vim: set tabstop=2 shiftwidth=2 : -->
