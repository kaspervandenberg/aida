//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.02.28 at 01:11:10 PM CET 
//


package config.aid.org.impl;

public class FieldTypeImpl implements config.aid.org.FieldType, com.sun.xml.bind.JAXBObject, config.aid.org.impl.runtime.UnmarshallableObject, config.aid.org.impl.runtime.XMLSerializable, config.aid.org.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected com.sun.xml.bind.util.ListImpl _FieldAnalyzer;
    protected com.sun.xml.bind.util.ListImpl _TermVector;
    protected com.sun.xml.bind.util.ListImpl _Date;
    protected com.sun.xml.bind.util.ListImpl _IndexStore;
    protected com.sun.xml.bind.util.ListImpl _Author;
    protected com.sun.xml.bind.util.ListImpl _Keywords;
    protected com.sun.xml.bind.util.ListImpl _Abstract;
    protected com.sun.xml.bind.util.ListImpl _MetaData;
    protected com.sun.xml.bind.util.ListImpl _Path;
    protected com.sun.xml.bind.util.ListImpl _URL;
    protected com.sun.xml.bind.util.ListImpl _PublishedIn;
    protected com.sun.xml.bind.util.ListImpl _FirstAuthor;
    protected com.sun.xml.bind.util.ListImpl _Title;
    protected com.sun.xml.bind.util.ListImpl _ID;
    public final static java.lang.Class version = (config.aid.org.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (config.aid.org.FieldType.class);
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getFieldAnalyzer() {
        if (_FieldAnalyzer == null) {
            _FieldAnalyzer = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _FieldAnalyzer;
    }

    public java.util.List getFieldAnalyzer() {
        return _getFieldAnalyzer();
    }

    protected com.sun.xml.bind.util.ListImpl _getTermVector() {
        if (_TermVector == null) {
            _TermVector = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _TermVector;
    }

    public java.util.List getTermVector() {
        return _getTermVector();
    }

    protected com.sun.xml.bind.util.ListImpl _getDate() {
        if (_Date == null) {
            _Date = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Date;
    }

    public java.util.List getDate() {
        return _getDate();
    }

    protected com.sun.xml.bind.util.ListImpl _getIndexStore() {
        if (_IndexStore == null) {
            _IndexStore = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _IndexStore;
    }

    public java.util.List getIndexStore() {
        return _getIndexStore();
    }

    protected com.sun.xml.bind.util.ListImpl _getAuthor() {
        if (_Author == null) {
            _Author = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Author;
    }

    public java.util.List getAuthor() {
        return _getAuthor();
    }

    protected com.sun.xml.bind.util.ListImpl _getKeywords() {
        if (_Keywords == null) {
            _Keywords = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Keywords;
    }

    public java.util.List getKeywords() {
        return _getKeywords();
    }

    protected com.sun.xml.bind.util.ListImpl _getAbstract() {
        if (_Abstract == null) {
            _Abstract = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Abstract;
    }

    public java.util.List getAbstract() {
        return _getAbstract();
    }

    protected com.sun.xml.bind.util.ListImpl _getMetaData() {
        if (_MetaData == null) {
            _MetaData = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _MetaData;
    }

    public java.util.List getMetaData() {
        return _getMetaData();
    }

    protected com.sun.xml.bind.util.ListImpl _getPath() {
        if (_Path == null) {
            _Path = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Path;
    }

    public java.util.List getPath() {
        return _getPath();
    }

    protected com.sun.xml.bind.util.ListImpl _getURL() {
        if (_URL == null) {
            _URL = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _URL;
    }

    public java.util.List getURL() {
        return _getURL();
    }

    protected com.sun.xml.bind.util.ListImpl _getPublishedIn() {
        if (_PublishedIn == null) {
            _PublishedIn = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _PublishedIn;
    }

    public java.util.List getPublishedIn() {
        return _getPublishedIn();
    }

    protected com.sun.xml.bind.util.ListImpl _getFirstAuthor() {
        if (_FirstAuthor == null) {
            _FirstAuthor = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _FirstAuthor;
    }

    public java.util.List getFirstAuthor() {
        return _getFirstAuthor();
    }

    protected com.sun.xml.bind.util.ListImpl _getTitle() {
        if (_Title == null) {
            _Title = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Title;
    }

    public java.util.List getTitle() {
        return _getTitle();
    }

    protected com.sun.xml.bind.util.ListImpl _getID() {
        if (_ID == null) {
            _ID = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ID;
    }

    public java.util.List getID() {
        return _getID();
    }

    public config.aid.org.impl.runtime.UnmarshallingEventHandler createUnmarshaller(config.aid.org.impl.runtime.UnmarshallingContext context) {
        return new config.aid.org.impl.FieldTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(config.aid.org.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_FieldAnalyzer == null)? 0 :_FieldAnalyzer.size());
        int idx3 = 0;
        final int len3 = ((_TermVector == null)? 0 :_TermVector.size());
        int idx4 = 0;
        final int len4 = ((_Date == null)? 0 :_Date.size());
        int idx5 = 0;
        final int len5 = ((_IndexStore == null)? 0 :_IndexStore.size());
        int idx6 = 0;
        final int len6 = ((_Author == null)? 0 :_Author.size());
        int idx7 = 0;
        final int len7 = ((_Keywords == null)? 0 :_Keywords.size());
        int idx8 = 0;
        final int len8 = ((_Abstract == null)? 0 :_Abstract.size());
        int idx9 = 0;
        final int len9 = ((_MetaData == null)? 0 :_MetaData.size());
        int idx10 = 0;
        final int len10 = ((_Path == null)? 0 :_Path.size());
        int idx11 = 0;
        final int len11 = ((_URL == null)? 0 :_URL.size());
        int idx12 = 0;
        final int len12 = ((_PublishedIn == null)? 0 :_PublishedIn.size());
        int idx13 = 0;
        final int len13 = ((_FirstAuthor == null)? 0 :_FirstAuthor.size());
        int idx14 = 0;
        final int len14 = ((_Title == null)? 0 :_Title.size());
        int idx15 = 0;
        final int len15 = ((_ID == null)? 0 :_ID.size());
        while (idx14 != len14) {
            context.startElement("http://aid.org/", "Title");
            int idx_0 = idx14;
            try {
                idx_0 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_1 = idx14;
            try {
                idx_1 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Title.get(idx14 ++)), "Title");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx6 != len6) {
            context.startElement("http://aid.org/", "Author");
            int idx_2 = idx6;
            try {
                idx_2 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_3 = idx6;
            try {
                idx_3 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Author.get(idx6 ++)), "Author");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx13 != len13) {
            context.startElement("http://aid.org/", "FirstAuthor");
            int idx_4 = idx13;
            try {
                idx_4 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_5 = idx13;
            try {
                idx_5 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FirstAuthor.get(idx13 ++)), "FirstAuthor");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx8 != len8) {
            context.startElement("http://aid.org/", "Abstract");
            int idx_6 = idx8;
            try {
                idx_6 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_7 = idx8;
            try {
                idx_7 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Abstract.get(idx8 ++)), "Abstract");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx10 != len10) {
            context.startElement("http://aid.org/", "Path");
            int idx_8 = idx10;
            try {
                idx_8 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_9 = idx10;
            try {
                idx_9 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Path.get(idx10 ++)), "Path");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx4 != len4) {
            context.startElement("http://aid.org/", "Date");
            int idx_10 = idx4;
            try {
                idx_10 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_11 = idx4;
            try {
                idx_11 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Date.get(idx4 ++)), "Date");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx11 != len11) {
            context.startElement("http://aid.org/", "URL");
            int idx_12 = idx11;
            try {
                idx_12 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_13 = idx11;
            try {
                idx_13 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _URL.get(idx11 ++)), "URL");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx15 != len15) {
            context.startElement("http://aid.org/", "ID");
            int idx_14 = idx15;
            try {
                idx_14 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_15 = idx15;
            try {
                idx_15 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ID.get(idx15 ++)), "ID");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx12 != len12) {
            context.startElement("http://aid.org/", "PublishedIn");
            int idx_16 = idx12;
            try {
                idx_16 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_17 = idx12;
            try {
                idx_17 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PublishedIn.get(idx12 ++)), "PublishedIn");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx7 != len7) {
            context.startElement("http://aid.org/", "Keywords");
            int idx_18 = idx7;
            try {
                idx_18 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_19 = idx7;
            try {
                idx_19 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Keywords.get(idx7 ++)), "Keywords");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx9 != len9) {
            context.startElement("http://aid.org/", "MetaData");
            int idx_20 = idx9;
            try {
                idx_20 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_21 = idx9;
            try {
                idx_21 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MetaData.get(idx9 ++)), "MetaData");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("http://aid.org/", "FieldAnalyzer");
            int idx_22 = idx2;
            try {
                idx_22 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_23 = idx2;
            try {
                idx_23 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FieldAnalyzer.get(idx2 ++)), "FieldAnalyzer");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("http://aid.org/", "IndexStore");
            int idx_24 = idx5;
            try {
                idx_24 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_25 = idx5;
            try {
                idx_25 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean)((java.lang.Boolean) _IndexStore.get(idx5 ++)).booleanValue())), "IndexStore");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("http://aid.org/", "TermVector");
            int idx_26 = idx3;
            try {
                idx_26 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endNamespaceDecls();
            int idx_27 = idx3;
            try {
                idx_27 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean)((java.lang.Boolean) _TermVector.get(idx3 ++)).booleanValue())), "TermVector");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(config.aid.org.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_FieldAnalyzer == null)? 0 :_FieldAnalyzer.size());
        int idx3 = 0;
        final int len3 = ((_TermVector == null)? 0 :_TermVector.size());
        int idx4 = 0;
        final int len4 = ((_Date == null)? 0 :_Date.size());
        int idx5 = 0;
        final int len5 = ((_IndexStore == null)? 0 :_IndexStore.size());
        int idx6 = 0;
        final int len6 = ((_Author == null)? 0 :_Author.size());
        int idx7 = 0;
        final int len7 = ((_Keywords == null)? 0 :_Keywords.size());
        int idx8 = 0;
        final int len8 = ((_Abstract == null)? 0 :_Abstract.size());
        int idx9 = 0;
        final int len9 = ((_MetaData == null)? 0 :_MetaData.size());
        int idx10 = 0;
        final int len10 = ((_Path == null)? 0 :_Path.size());
        int idx11 = 0;
        final int len11 = ((_URL == null)? 0 :_URL.size());
        int idx12 = 0;
        final int len12 = ((_PublishedIn == null)? 0 :_PublishedIn.size());
        int idx13 = 0;
        final int len13 = ((_FirstAuthor == null)? 0 :_FirstAuthor.size());
        int idx14 = 0;
        final int len14 = ((_Title == null)? 0 :_Title.size());
        int idx15 = 0;
        final int len15 = ((_ID == null)? 0 :_ID.size());
        if (_Type!= null) {
            context.startAttribute("", "Type");
            try {
                context.text(((java.lang.String) _Type), "Type");
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        while (idx14 != len14) {
            try {
                idx14 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            try {
                idx6 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx13 != len13) {
            try {
                idx13 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx8 != len8) {
            try {
                idx8 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx10 != len10) {
            try {
                idx10 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx4 != len4) {
            try {
                idx4 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx11 != len11) {
            try {
                idx11 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx15 != len15) {
            try {
                idx15 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx12 != len12) {
            try {
                idx12 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx7 != len7) {
            try {
                idx7 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx9 != len9) {
            try {
                idx9 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx2 != len2) {
            try {
                idx2 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            try {
                idx5 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public void serializeURIs(config.aid.org.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx2 = 0;
        final int len2 = ((_FieldAnalyzer == null)? 0 :_FieldAnalyzer.size());
        int idx3 = 0;
        final int len3 = ((_TermVector == null)? 0 :_TermVector.size());
        int idx4 = 0;
        final int len4 = ((_Date == null)? 0 :_Date.size());
        int idx5 = 0;
        final int len5 = ((_IndexStore == null)? 0 :_IndexStore.size());
        int idx6 = 0;
        final int len6 = ((_Author == null)? 0 :_Author.size());
        int idx7 = 0;
        final int len7 = ((_Keywords == null)? 0 :_Keywords.size());
        int idx8 = 0;
        final int len8 = ((_Abstract == null)? 0 :_Abstract.size());
        int idx9 = 0;
        final int len9 = ((_MetaData == null)? 0 :_MetaData.size());
        int idx10 = 0;
        final int len10 = ((_Path == null)? 0 :_Path.size());
        int idx11 = 0;
        final int len11 = ((_URL == null)? 0 :_URL.size());
        int idx12 = 0;
        final int len12 = ((_PublishedIn == null)? 0 :_PublishedIn.size());
        int idx13 = 0;
        final int len13 = ((_FirstAuthor == null)? 0 :_FirstAuthor.size());
        int idx14 = 0;
        final int len14 = ((_Title == null)? 0 :_Title.size());
        int idx15 = 0;
        final int len15 = ((_ID == null)? 0 :_ID.size());
        while (idx14 != len14) {
            try {
                idx14 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx6 != len6) {
            try {
                idx6 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx13 != len13) {
            try {
                idx13 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx8 != len8) {
            try {
                idx8 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx10 != len10) {
            try {
                idx10 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx4 != len4) {
            try {
                idx4 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx11 != len11) {
            try {
                idx11 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx15 != len15) {
            try {
                idx15 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx12 != len12) {
            try {
                idx12 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx7 != len7) {
            try {
                idx7 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx9 != len9) {
            try {
                idx9 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx2 != len2) {
            try {
                idx2 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx5 != len5) {
            try {
                idx5 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
        while (idx3 != len3) {
            try {
                idx3 += 1;
            } catch (java.lang.Exception e) {
                config.aid.org.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (config.aid.org.FieldType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 "
+"com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.g"
+"rammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boo"
+"lean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.Elem"
+"entPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Nam"
+"eClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignor"
+"eUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000"
+"ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/rel"
+"axng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/"
+"util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.B"
+"uiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Conc"
+"reteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeIm"
+"pl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeName"
+"q\u0000~\u0000\'L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePro"
+"cessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tl"
+"ocalNameq\u0000~\u0000\'L\u0000\fnamespaceURIq\u0000~\u0000\'xpq\u0000~\u0000+q\u0000~\u0000*sq\u0000~\u0000\u0013ppsr\u0000 com"
+".sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameCl"
+"assq\u0000~\u0000\u001bxq\u0000~\u0000\u0003q\u0000~\u0000\u0019psq\u0000~\u0000\u001fppsr\u0000\"com.sun.msv.datatype.xsd.Qna"
+"meType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000*t\u0000\u0005QNamesr\u00005com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000-q\u0000~\u00000sq\u0000~\u0000"
+"1q\u0000~\u00009q\u0000~\u0000*sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002L\u0000\tlocalNameq\u0000~\u0000\'L\u0000\fnamespaceURIq\u0000~\u0000\'xr\u0000\u001dcom.sun.msv.gramma"
+"r.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XML"
+"Schema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0018\u0001psq\u0000~\u0000=t\u0000\u0005Titlet\u0000\u000fhttp://aid."
+"org/q\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000"
+"\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0006Authorq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000"
+"\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019"
+"pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u000bFirstAuthorq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015"
+"q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~"
+"\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\bAbstractq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001a"
+"q\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000"
+"=t\u0000\u0004Pathq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0004Dateq\u0000~\u0000Gq\u0000~"
+"\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~"
+"\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0003URLq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000"
+"?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0002IDq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u000bPub"
+"lishedInq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000\"sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\bKeywordsq\u0000~\u0000"
+"Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\"sq\u0000~\u0000\u0013pp"
+"sq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\bMetaDataq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013"
+"ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001fppsr\u0000)com.sun.msv.d"
+"atatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/uti"
+"l/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstrai"
+"ntFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithF"
+"acet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTy"
+"pet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTyp"
+"et\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\'"
+"xq\u0000~\u0000&q\u0000~\u0000Gt\u0000\fanalyzerTypeq\u0000~\u0000.\u0000\u0000q\u0000~\u0000)q\u0000~\u0000)t\u0000\u000benumerationsr\u0000"
+"\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\bSTANDARDt\u0000\u0004S"
+"TOPt\u0000\u0006SIMPLEt\u0000\nWHITESPACExq\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000\u00a4q\u0000~\u0000Gsq\u0000~\u0000\u0013ppsq\u0000~\u0000"
+"4q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\rFieldAnalyzerq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013"
+"ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001fppsr\u0000$com.sun.msv.d"
+"atatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000$q\u0000~\u0000*t\u0000\u0007booleanq\u0000~\u0000;"
+"q\u0000~\u00000sq\u0000~\u00001q\u0000~\u0000\u00b8q\u0000~\u0000*sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~"
+"\u0000=t\u0000\nIndexStoreq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0019psq\u0000~\u0000\u001aq\u0000~\u0000\u0019p\u0000sq"
+"\u0000~\u0000\u0000ppq\u0000~\u0000\u00b5sq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\nTermV"
+"ectorq\u0000~\u0000Gq\u0000~\u0000Csq\u0000~\u0000\u0013ppsq\u0000~\u00004q\u0000~\u0000\u0019pq\u0000~\u0000\"sq\u0000~\u0000=t\u0000\u0004Typet\u0000\u0000q\u0000~\u0000"
+"Csr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTabl"
+"et\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com"
+".sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005coun"
+"tB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expression"
+"Pool;xp\u0000\u0000\u0000G\u0001pq\u0000~\u0000{q\u0000~\u0000sq\u0000~\u0000kq\u0000~\u0000cq\u0000~\u0000[q\u0000~\u0000Sq\u0000~\u0000Kq\u0000~\u0000\u001eq\u0000~\u0000\u0011q\u0000"
+"~\u0000\u0093q\u0000~\u0000\u008bq\u0000~\u0000\u0083q\u0000~\u0000\u000bq\u0000~\u0000\u0007q\u0000~\u0000\nq\u0000~\u0000\u000fq\u0000~\u0000\u0099q\u0000~\u0000\u0005q\u0000~\u0000\u0010q\u0000~\u0000\u00b2q\u0000~\u0000\u00bfq\u0000"
+"~\u0000\u00c6q\u0000~\u0000\u0098q\u0000~\u0000\tq\u0000~\u0000xq\u0000~\u0000pq\u0000~\u0000hq\u0000~\u0000`q\u0000~\u0000Xq\u0000~\u0000Pq\u0000~\u0000Hq\u0000~\u0000\u0014q\u0000~\u0000\u0090q\u0000"
+"~\u0000\u0088q\u0000~\u0000\u0080q\u0000~\u0000\u00b4q\u0000~\u0000\u00c1q\u0000~\u0000\u00b1q\u0000~\u0000\u00beq\u0000~\u0000\fq\u0000~\u0000\u0012q\u0000~\u0000\u00adq\u0000~\u0000\u0094q\u0000~\u0000\u008cq\u0000~\u0000\u0084q\u0000"
+"~\u0000|q\u0000~\u0000tq\u0000~\u0000lq\u0000~\u0000dq\u0000~\u0000\\q\u0000~\u0000Tq\u0000~\u0000Lq\u0000~\u00003q\u0000~\u0000\u00baq\u0000~\u0000\u00c2q\u0000~\u0000\bq\u0000~\u0000yq\u0000"
+"~\u0000qq\u0000~\u0000iq\u0000~\u0000aq\u0000~\u0000Yq\u0000~\u0000Qq\u0000~\u0000Iq\u0000~\u0000\u0017q\u0000~\u0000\u009bq\u0000~\u0000\rq\u0000~\u0000\u0091q\u0000~\u0000\u0089q\u0000~\u0000\u0081q\u0000"
+"~\u0000\u0006q\u0000~\u0000\u000ex"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends config.aid.org.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(config.aid.org.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------");
        }

        protected Unmarshaller(config.aid.org.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return config.aid.org.impl.FieldTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("Path" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        if (("Date" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  6 :
                        if (("Title" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        if (("Author" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  45 :
                        if (("TermVector" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        if (("FirstAuthor" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        if (("Abstract" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("Abstract" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        if (("Path" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  42 :
                        if (("IndexStore" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        if (("TermVector" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  27 :
                        if (("ID" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        if (("PublishedIn" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  9 :
                        if (("Author" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        if (("FirstAuthor" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  39 :
                        if (("FieldAnalyzer" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        if (("IndexStore" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  30 :
                        if (("PublishedIn" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        if (("Keywords" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  24 :
                        if (("URL" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        if (("ID" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  36 :
                        if (("MetaData" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        if (("FieldAnalyzer" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  3 :
                        if (("Title" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  21 :
                        if (("Date" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        if (("URL" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        if (("Keywords" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        if (("MetaData" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  41 :
                        if (("IndexStore" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  45 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        if (("FirstAuthor" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("URL" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("TermVector" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("Keywords" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  26 :
                        if (("ID" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("Path" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("MetaData" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("Date" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  5 :
                        if (("Title" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  38 :
                        if (("FieldAnalyzer" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  8 :
                        if (("Author" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("Abstract" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("PublishedIn" == ___local)&&("http://aid.org/" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  45 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  45 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  2 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "Type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            state = 11;
                            eatText2(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  22 :
                            state = 23;
                            eatText3(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText4(value);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  45 :
                            revertToParentFromText(value);
                            return ;
                        case  25 :
                            state = 26;
                            eatText5(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText6(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText7(value);
                            return ;
                        case  40 :
                            state = 41;
                            eatText8(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText9(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText10(value);
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  37 :
                            state = 38;
                            eatText11(value);
                            return ;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  43 :
                            state = 44;
                            eatText12(value);
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  34 :
                            state = 35;
                            eatText13(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "Type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText14(value);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText15(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getFirstAuthor().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getURL().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getPath().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getID().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAuthor().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getTitle().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getIndexStore().add(new java.lang.Boolean(javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value))));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getDate().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getPublishedIn().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getFieldAnalyzer().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getTermVector().add(new java.lang.Boolean(javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value))));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getMetaData().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getAbstract().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _getKeywords().add(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
