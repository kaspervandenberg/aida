<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.adaptivedisclosure.aida</groupId>
	<artifactId>zylabPatisClient</artifactId>
	<version>0.90</version>
	<packaging>jar</packaging>
	<name>AIDA::Zylab Patis Search client</name>
	<description>
		Client to search in Zylab's documents about patient for patients that match
		(eligibility) criteria.
	</description>
	
	<parent>
		<groupId>org.adaptivedisclosure.aida</groupId>
		<artifactId>maven-parent</artifactId>
		<version>0.7-SNAPSHOT</version>
		<relativePath>../../maven-parent</relativePath>
	</parent>

	<profiles>
		<profile>
			<id>test_remote_Vocab</id>
			<properties>
				<!--
					Host on which services are deployed.
				-->
				<target.host>clinisearch.ad.maastro.nl</target.host>

				<!--
					Port on which tomcat services listen.
				-->
				<target.port>80</target.port>

				<!--
					URL of Search/search webservice.
					Used when testing Search/search.
				-->
				<target.search.url>
					HTTP://${target.host}:${target.port}/search/
				</target.search.url>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-surefire-plugin</artifactId>
							<configuration>
								<systemProperties>
									<target.search.url>${target.search.url}</target.search.url>
								</systemProperties>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

		<profile>
			<id>maastro_clinisearch</id>
			<!--
				maastro_clinisearch profile requires either 
				'use_full_index' or 'use_6week_index' profile active.
			-->
			<properties>
				<!-- The directory to use to read the indexes -->
				<aida.indexdir>${env.INDEXDIR}</aida.indexdir>
				<aida.index>zylab</aida.index>
				<aida.reportsDir>/var/www/zpsc</aida.reportsDir>
				<aida.validationdata.chemo>/home/administrator/validation-data/2013-08-16.json</aida.validationdata.chemo>
				<aida.validationdata.metastasis>/home/administrator/validation-data/patients-metastasis-20121221_AD2.json</aida.validationdata.metastasis>
			</properties>

		</profile>

		<profile>
			<id>kasper_dev</id>
			<properties>
				<!-- The directory to use to read the indexes -->
				<aida.indexdir>/home/kasper/tmp/vocab/aida/indexes</aida.indexdir>
				<aida.index>Zylab_test-20130602</aida.index>
				<aida.reportsDir>.</aida.reportsDir>
				<aida.validationdata.chemo>${basedir}/data/patients-chemo-20121221_AD2.json</aida.validationdata.chemo>
				<aida.validationdata.metastasis>${basedir}/data/patients-metastasis-20121221_AD2.json</aida.validationdata.metastasis>
			</properties>
		</profile>	

		<profile>
			<id>scott_dev</id>
			<properties>
				<aida.indexdir>/C:/Indexes</aida.indexdir>
				<aida.index>Zylab_test-20130602</aida.index>
				<aida.reportsDir>.</aida.reportsDir>
				<aida.validationdata.chemo>/C:/Users/gebruiker/documents/NetBeansProjects/aida/Search/zylabPatisClient/patients-chemo-20121221_AD2.json</aida.validationdata.chemo>
				<aida.validationdata.metastasis>/C:/Users/gebruiker/documents/NetBeansProjects/aida/Search/zylabPatisClient/patients-metastasis-20121221_AD2.json</aida.validationdata.metastasis>
			</properties>
		</profile>
	</profiles>


	<build>
		<plugins>
			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<fork>true</fork>
					<compilerArgs>
						<arg>-Xlint:-unchecked</arg>
						<arg>-Xlint:-deprecation</arg>
					</compilerArgs>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>false</skip>
					<workingDirectory>${test.workingDirectory}</workingDirectory>
					<environmentVariables>
						<INDEXDIR>${test.workingDirectory}/indexes</INDEXDIR>
					</environmentVariables>
				</configuration>
			</plugin>
			
			<plugin>
				<!--
					Create runnable jar.
					The generated jar requires dependencies in ../lib, therefore
					copy runnable jar to ${PREFIX}/bin and dependencies to
					${PREFIX}/lib.
				-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>../lib/</classpathPrefix>
							<mainClass>nl.maastro.eureca.aida.search.zylabpatisclient.API_Demo</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>axistools-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-sources/axistools</outputDirectory>
<?ignore
							<urls>
								<url>http://clinisearch.ad.maastro.nl/axis/services/SearcherWS?wsdl</url>	
							</urls>
?>
							<wsdlFiles>
								<wsdlFile>clinisearch.ad.maastro.nl-axis-services-SearcherWS-wsdl.wsdl</wsdlFile>
							</wsdlFiles>
							<packagenName>nl.maastro.eureca.aida.serviceStub</packagenName>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>edu.washington.cs.types.checker</groupId>
				<artifactId>checker-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<processors>
						<processor>checkers.nullness.NullnessChecker</processor>
					</processors>
					<includes>
						<include>nl/maastro/eureca/aida/search/zylabpatisclient/**/*.java</include>
					</includes>
					<excludes>
						<exclude>SearcherWS/**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.3.1</version>

				<executions>
					<execution>
						<id>enfore-properties</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property>aida.indexdir</property>
									<message>Required: selecting a profile that defines the property 'aida.indexdir'.  Use "mvn help:all-profiles" to see a list of available profiles."</message>
								</requireProperty>

								<requireProperty>
									<property>aida.index</property>
									<message>Required: selecting a profile that defines the property 'aida.index'.  Use "mvn help:all-profiles" to see a list of available profiles."</message>
								</requireProperty>

								<requireProperty>
									<property>aida.validationdata.chemo</property>
									<message>Required: selecting a profile that defines the property 'aida.validationdata.chemo'.  Use "mvn help:all-profiles" to see a list of available profiles."</message>
								</requireProperty>
								<requireProperty>
									<property>aida.validationdata.metastasis</property>
									<message>Required: selecting a profile that defines the property 'aida.validationdata.metastasis'.  Use "mvn help:all-profiles" to see a list of available profiles."</message>
								</requireProperty>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			
			<resource>
				<directory>src/main/xsd</directory>
				<includes>
					<include>zylabPatisClientConfig.xsd</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			
		</resources>
	</build>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<!-- provides javax.servlet -->
			<!-- used in olg.vle.aid.client/* -->
		</dependency>

		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxrpc-api</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<!--
				used in org.vle.aid.client.*, org.aid.vle.lucene.*, 
				org.apache.lucene.aid.LuceneFilter
			-->
		</dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queries</artifactId>
			<!-- Provides additional org.apache.lucene.search.filters -->
			<!-- used in org.apache.lucene.aid.LuceneFilter -->
		</dependency>
			
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<!-- used in org.vcle.aid.client.search -->
		</dependency>

		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-highlighter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.3</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<!--
				Use Spring framework for dependency injection.
				Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) 
				This is the central artifact for Spring's Dependency Injection Container and is generally always defined
			-->
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<!--
				Use Spring framework for dependency injection.
			-->
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<type>jar</type>
			<!--
				Provides the standard @Inject and @Resource annotations understood by
				springframework and other dependency frameworks.
			-->
		</dependency>
	 
	 <dependency>
		 <groupId>commons-io</groupId>
		 <artifactId>commons-io</artifactId>
		 <version>2.4</version>
	 </dependency>
			
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
			<!-- Provides commandline argument parsing -->
			<!--
				used in nl.maastro.eureca.aida.search.zylabpatisclient.ZylabPatisClient 
			-->
		</dependency>
	
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom2</artifactId>
			<version>2.0.4</version>
			<!--
				Provides parsing XML to a DOM-tree and XPath operations; supposed to 
				be better than java's standard implementation.
			-->
			<!--
				used in nl.maastro.eureca.aida.search.zylabpatisclient.config.Config 
			-->
		</dependency>

		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1.4</version>
			<!--
				Provides navigation of DOM-trees with XPath.
			-->
			<!--
				Used by org.jdom as optional dependency.
				used in nl.maastro.eureca.aida.search.zylabpatisclient.config.Config 
			-->
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.25</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>

		<dependency>
			<groupId>net.kaspervandenberg</groupId>
			<artifactId>apps.common.util.cache</artifactId>
			<version>1.0.2</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!--<version>4.11</version>-->
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<!--<version>1.3</version>-->
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>edu.washington.cs.types.checker</groupId>
			<artifactId>checker-quals</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.2</version>
			<!--
				Used in nl.maastro.eureca.aida.search.zylabpatisclient.ZylabPatisClient.
				Provides JSON to java object and vice versa transformation.
			-->
			<!--
				TODO: com.google.code.gson:gson is considered of higher quality 
				see http://stackoverflow.com/questions/338586/a-better-java-json-library
				therefore convert dependencies on org.json to dependencies on 
				com.google.gson.
			-->
		</dependency>
	</dependencies>
</project>

<!-- vim: set tabstop=2 shiftwidth=2 : -->

